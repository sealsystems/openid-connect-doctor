<!--SDPX-License-Identifier: MIT-->
<!--SDPX-FileCopyrightText: 2022 Michael Kupfer <michael.kupfer@fau.de>-->
<html>
<head>
    <meta charset="utf-8" />
    <title>Client-Credential-Flow</title>

    <style>
        .container {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;

            margin: 3px;
            padding: 10px;
            border: 2px solid black;
            border-radius: 3px 2px;
        }
        .result-container {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            margin:3px;
            padding: 10px;
            border: 2px solid black;
            border-radius: 3px 2px;
        }
        .results-item {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
        }
        .result-group {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            width: 100%;
            margin:3px;
            padding: 10px;
            border: 1px dotted black;
            border-radius: 3px 2px;
        }

        .filtered-header-output {
            display: none;
        }

        .filtered-output {
            display: none;
        }
    </style>
</head>
<body>
<div class="container">
    <a class="result-container">
        <h2>Flow-Result</h2>

        <p class="message-item">{{message}}</p>

        <div>
            <label for="filter-input">Filtern:</label>
            <input id="filter-input" name="filter-input" type="text" />

            <button id="filter-button" type="button" onclick="filterElements();">Filter</button>
            <button id="filter-button" type="button" onclick="resetFilters();">Reset</button>
        </div>
        {{#if showResults}}
            <div class="results-item">
                <div class="result-group">
                    <h2>Header</h2>
                    <pre id="header-output">{{ header }}</pre>
                    <pre id="filtered-header-output" class="filtered-output"></pre>
                </div>
                <div class="result-group">
                    <h2>Payload</h2>
                    <pre id="payload-output">{{{ payload }}}</pre>
                    <pre id="filtered-payload-output" class="filtered-output"></pre>
                </div>
                 <div class="result-group">
                    <h2>Discovery-Endpoint</h2>
                    <pre id="discovery-output">{{ discoveryResult }}</pre>
                </div>
            </div>
        {{/if}}
    </div>
</div>
<script>
    function filterElements() {
        let headerText = document.getElementById('header-output').innerText;
        let payloadText = document.getElementById('payload-output').innerText;
        let filterValues = document.getElementById('filter-input').value;

        let filters = filterValues.split(',');

        const params = {
            headerString: headerText,
            payloadString: payloadText,
            filters: filters,
        }

        let xhttp = new XMLHttpRequest();
        xhttp.open('POST','/api/token/filter');
        xhttp.setRequestHeader('Content-Type', 'application/json')
        xhttp.onreadystatechange = function() {
            if (this.readyState === 4 && this.status === 201) {
                let responseJson = JSON.parse(this.responseText);

                let headerResponse = responseJson[0];
                let payloadResponse = responseJson[1];

                document.getElementById('header-output').style.display = 'none';
                document.getElementById('payload-output').style.display = 'none';

                document.getElementById('filtered-header-output').innerText = headerResponse;
                document.getElementById('filtered-header-output').style.display = 'block';
                document.getElementById('filtered-payload-output').innerText = payloadResponse;
                document.getElementById('filtered-payload-output').style.display = 'block';
            }
        };
        body = JSON.stringify(params)
        xhttp.send(body);
    }

    function resetFilters() {
        document.getElementById('header-output').style.display = 'block';
        document.getElementById('payload-output').style.display = 'block';

        document.getElementById('filtered-header-output').innerText = '';
        document.getElementById('filtered-header-output').style.display = 'none';
        document.getElementById('filtered-payload-output').innerText = '';
        document.getElementById('filtered-payload-output').style.display = 'none';
    }
</script>
</body>
</html>
